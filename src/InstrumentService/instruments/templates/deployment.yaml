apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "instruments.fullname" . }}
  labels:
    {{- include "instruments.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "instruments.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "instruments.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "instruments.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: JAEGER_AGENT_HOST
            value: {{ .Values.jaeger.agent.host }}
          - name: JAEGER_AGENT_PORT
            value: "{{ .Values.jaeger.agent.port }}"
          - name: SERVICE_NAME
            value: "{{ template "instruments.fullname" . }}.{{ .Release.Namespace }}"
          - name: ASPNETCORE_URLS
            value: http://+:8080
          - name: "Accounts"
            valueFrom:
              secretKeyRef:
                name: mssql
                key: AccountsDb
          - name: "CLIENT_SECRET"
            valueFrom:
              secretKeyRef:
                name: azure
                key: ClientSecret
          - name: "CLIENT_ID"
            valueFrom:
              secretKeyRef:
                name: azure
                key: ClientId
          - name: "JWT_SECRET"
            valueFrom:
              secretKeyRef:
                name: jwt
                key: Secret
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /system/live
              port: 8080
          readinessProbe:
            httpGet:
              path: /system/ready
              port: 8080
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
